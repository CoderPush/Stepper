# This is a basic workflow to help you get started with Actions

name: 🚀 🙏 Build and deploy iOS app to Firebase

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  build-ios:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"

      - name: Install Gem (For Fastlane)
        working-directory: ./ios
        run: bundle install

      - name: Generate empty .env
        run: touch $GITHUB_WORKSPACE/.env

      - name: Generate Google Service Plist
        env:
          IOS_FIREBASE_CONFIG: ${{ secrets.IOS_FIREBASE_CONFIG }}
        run: echo "$IOS_FIREBASE_CONFIG" | base64 --decode > $GITHUB_WORKSPACE/ios/Runner/GoogleService-Info.plist

      - name: Insert certificate and provisioning profile
        working-directory: ./ios
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_KEY_CONTENT_BASE64: ${{ secrets.APP_STORE_KEY_CONTENT_BASE64 }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: bundle exec fastlane install_cert_and_profile

      - uses: subosito/flutter-action@v2

      - name: Get pub
        run: flutter pub get

      - name: Build ipa
        run: flutter build ipa --release --export-options-plist=$GITHUB_WORKSPACE/ios/ExportOptions.plist

      - uses: actions/upload-artifact@v2
        with:
          name: ipa
          path: build/ios/ipa/Stepper.ipa

  distribute_to_firebase:
    runs-on: ubuntu-latest

    needs: build-ios
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ipa
          path: build/ios/ipa

      - name: Distribute to Firebase Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.IOS_FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: build/ios/ipa/Stepper.ipa
