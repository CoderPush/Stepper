name: Build android and deploy firebase

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
      - setup-actions
  workflow_dispatch:
    inputs:
      tester_group:
        description: 'Firebase tester group'
        required: true
        type: string
        default: 'testers'

jobs:
  build-apk:
    name: Build android apk
    runs-on: macos-latest
    steps:
      # Set up java
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Set up Flutter
      - name: Clone Flutter repository with stable channel
        uses: subosito/flutter-action@4389e6cbc6cb8a4b18c628ff96ff90be0e926aa8
        with:
          channel: stable
      - run: flutter config --enable-macos-desktop
      - run: flutter doctor -v

      # Checkout repository code and get packages.
      - name: Checkout Stepper code
        uses: actions/checkout@v2
      - run: flutter pub get -v

      - name: Generate empty .env
        run: touch .env

      # Create file firebase json
      - name: Make firebase json
        env:
          FIREBASE_SERVICES_JSON: ${{ secrets.FIREBASE_SERVICES_JSON }}
        run: echo $FIREBASE_SERVICES_JSON > android/app/google-services.json

      - name: Configure Keystore
        run: |
          echo "$ANDROID_KEYSTORE" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - name: Build apk
        run: flutter build apk --release

      - uses: actions/upload-artifact@v2
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-release.apk

  distribute_to_firebase:
    name: distribute to firebase
    runs-on: ubuntu-latest

    needs: build-apk
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: apk
          path: build/app/outputs/flutter-apk/

      - name: Distribute to Firebase Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.ANDROID_FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: ${{ github.event.inputs.tester_group || 'testers' }}
          file: build/app/outputs/flutter-apk/app-release.apk