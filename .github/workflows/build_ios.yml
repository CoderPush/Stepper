# This is a basic workflow to help you get started with Actions

name: Build and deploy to Firebase Distribution iOS app

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-ios:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install Gem (For Fastlane)
        working-directory: ./ios
        run: bundle install
            
      - name: Generate Google Service Plist
        env:
          IOS_FIREBASE_CONFIG: ${{ secrets.IOS_FIREBASE_CONFIG }}
        run: echo "$IOS_FIREBASE_CONFIG" | base64 --decode > $GITHUB_WORKSPACE/ios/Runner/GoogleService-Info.plist

      - name: Insert certificate and provisioning profile
        working-directory: ./ios
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_KEY_CONTENT_BASE64: ${{ secrets.APP_STORE_KEY_CONTENT_BASE64 }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          PRIVATE_GIT_URL: ${{ secrets.PRIVATE_GIT_URL }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: bundle exec fastlane install_cert_and_profile
          
      - uses: subosito/flutter-action@v2
      
      - name: Get pub 
        run: flutter pub get

      - name: Build ipa
        run: flutter build ipa --release --export-options-plist=$GITHUB_WORKSPACE/ios/ExportOptions.plist

      - name: Distribute to Firebase Distribution
        working-directory: ./ios
        env:
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: bundle exec fastlane distribute_to_firebase
        